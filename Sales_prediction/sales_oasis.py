# -*- coding: utf-8 -*-
"""sales_oasis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18YilM8dkninNaeoPR407pQY4gCn4NxAM

Sales Prediction Building a model to predicts sales based on the money spent on different platforms for marketing. By using the advertising dataset given in ISLR and analyse the relationship between 'TV advertising' and 'sales' using a simple linear regression model. Here we'll build a linear regression model to predict Sales using an appropriate predictor variable.
"""

#importing libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Loading the dataset

sales=pd.read_csv('Advertising.csv')
sales.head()

sales.shape

#Describe Data
sales.info()

sales.describe()

sales.columns

#Data Visualization
sns.boxplot(sales['Sales'])
plt.show()

sns.pairplot(sales, x_vars=['TV', 'Newspaper', 'Radio'], y_vars='Sales', height=4, aspect=1, kind='scatter')
plt.show()

sns.heatmap(sales.corr(), cmap="YlGnBu", annot = True)
plt.show()

#Data Preprocessing
sales.isnull().sum()

#Define Target Variable (y) and Feature Variables (X)
y=sales['Sales']
X=sales.drop(columns=['Unnamed: 0','Sales'],axis=1)

print(X)

print(y)

# Spliting the training data and test data
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test =train_test_split(X,y, test_size=0.2, random_state=2)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

# modeling
from sklearn.linear_model import LinearRegression
model = LinearRegression()

#model evaluation
model.fit(X_train,y_train)

model.intercept_

model.coef_

#predict model
y_pred = model.predict(X_test)

y_pred

#model accuracy
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, mean_squared_error

mean_absolute_error(y_test,y_pred)

mean_absolute_percentage_error(y_test,y_pred)

mean_squared_error(y_test,y_pred)

r2=model.score(X_train, y_train)

print(r2)

Prediction_model=[[100,100,100]]

print('Sales of TV, Radio and Newspaper is :', model.predict(Prediction_model))